<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.DesMapper">

	<!-- Result Map -->
	<resultMap id="BaseResultMap" type="com.model.DesModel">	<!--实体类全类名 -->
		<result column="id" property="id" />
		<result column="code" property="code" />  	<!--映射关系 数据库表中的名 后面是实体类中的属性名 -->
		<result column="name" property="name" />
		<result column="parentcode" property="parentcode" />
		<result column="des" property="des" />
	</resultMap>

	<!-- table all fields   sql片段 -->
	<sql id="Base_Column_List">
		code, name, parentcode,des
	</sql>

	<!-- 查询条件 -->
	<sql id="Example_Where_Clause">
		where 1=1
<!-- 			<if test="id != null"> -->
<!-- 				and id = #{id} -->
<!-- 			</if> -->
			<if test="code != null and code != ''">
				and code like #{code}
			</if>
			<if test="name != null and name != ''">
				and name = #{name}
			</if>
			<if test="parentcode != null and parentcode != ''">
				and parentcode = #{parentcode}
			</if>
			<if test="des != null and des != ''">
				and des = #{des}
			</if>
	</sql>

	<!-- 插入记录 -->
	<!--selectKey  会将 SELECT LAST_INSERT_ID()的结果放入到传入的model的主键里面，  
        keyProperty 对应的model中的主键的属性名，这里是 user 中的id，因为它跟数据库的主键对应  
        order AFTER 表示 SELECT LAST_INSERT_ID() 在insert执行之后执行,多用与自增主键，  
              BEFORE 表示 SELECT LAST_INSERT_ID() 在insert执行之前执行，这样的话就拿不到主键了，  
                    这种适合那种主键不是自增的类型  
        resultType 主键类型 -->  
	<insert id="insert" parameterType="Object">
<!-- 		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id"> -->
<!-- 			SELECT LAST_INSERT_ID() -->
<!-- 		</selectKey> -->
		insert into shop.admingoods(code, name, parentcode,des)
		values(#{code}, #{name}, #{parentcode},#{des})
	</insert>
	
	<!-- 删除记录 -->
	<delete id="delete" parameterType="Object">
		delete from shop.admingoods where code = #{code}
	</delete>
	
	<delete id="deleteModel" parameterType="Object">
		delete from shop.admingoods 
		<include refid="Example_Where_Clause" />
	</delete>

	<!-- 根据，修改记录 -->
	<update id="update" parameterType="Object">
		update shop.admingoods set
		name = #{name}, parentcode = #{parentcode},des=#{des}
		where code = #{code}
	</update>

	<!-- 修改记录，只修改只不为空的字段 -->
	<update id="updateActive" parameterType="Object">
		update shop.admingoods set
		<trim suffixOverrides=",">
			<if test="name != null and name != '' ">
				name = #{name},
			</if>
			<if test="parentcode != null and parentcode != '' ">
				parentcode = #{parentcode},
			</if>
		</trim>
		where code = #{code}
	</update>

	<!-- 根据查询 系统用户 -->
	<select id="selectId" resultMap="BaseResultMap" parameterType="Object">
		select <include refid="Base_Column_List" />
		from shop.admingoods where code = #{id}
	</select>

	<!-- 系统用户 列表总数 -->
	<select id="selectCount" resultType="java.lang.Integer" parameterType="Object">
		select count(1) from shop.admingoods
		<include refid="Example_Where_Clause" />
	</select>

	<!-- 查询系统用户列表 -->
	<select id="selectModel" resultMap="BaseResultMap" parameterType="Object">
		select (select url from productpic a where a.code=b.code and type="1")url,code,name from shop.admingoods b <include refid="Example_Where_Clause" />
	</select>
	
	<!-- 查询系统用户列表 -->
	<select id="selectAll" resultMap="BaseResultMap" parameterType="Object">
		select <include refid="Base_Column_List" />
		from shop.admingoods
		<include refid="Example_Where_Clause" />
<!-- 		<if test="pager.orderCondition != null and pager.orderCondition != ''"> -->
<!-- 			${pager.orderCondition} -->
<!-- 		</if> -->
    limit ${rowStart},${pageLimit}
	</select>

</mapper>   